<?xml version="1.0" encoding="UTF-8"?>
<project name="JobJenkins" default="ci" basedir=".">
    <property name="source" value="src" />

    <target name="ci"
        description="Tâche principale d'intégration continue"
        depends="clean,qa"
    />

    <target name="clean" description="Vide les répertoires d'artefacts">
    	<delete dir="${project.basedir}/build/code-browser" />
    	<delete dir="${project.basedir}/build/coverage" />
    	<delete dir="${project.basedir}/build/logs" />
    	<delete dir="${project.basedir}/build/pdepend" />
        <delete dir="${project.basedir}/build/phpdox" />

    	<mkdir dir="${project.basedir}/build/code-browser" />
    	<mkdir dir="${project.basedir}/build/coverage" />
    	<mkdir dir="${project.basedir}/build/logs" />
    	<mkdir dir="${project.basedir}/build/pdepend" />
        <mkdir dir="${project.basedir}/build/phpdox" />
    </target>

    <target name="qa" description="Lance les outils d'analyse">
        <!--phingcall target="pdepend" />
        <phingcall target="phpmd" />
        <phingcall target="phpcpd" />
        <phingcall target="phploc" />
        <phingcall target="phpcs" />
        <phingcall target="phpdox" />
        <phingcall target="phpunit" />
        <phingcall target="phpcb" /-->
    </target>

    <!-- pour pour des statisques sur la qualité du code  (complexité cyclomatiques, profondeur d’héritage, 
         nombre de méthodes surchargées…). Cet utilitaire est basé sur JDepend. -->
    <target name="pdepend">
    	<phpdepend file="${project.basedir}/src">
        <logger type="jdepend-xml" outfile="${project.basedir}/build/logs/jdepend.xml" />
        <logger type="jdepend-chart" outfile="${project.basedir}/build/pdepend/dependencies.svg" />
        <logger type="overview-pyramid" outfile="${project.basedir}/build/pdepend/overview-pyramid.svg" />
    	</phpdepend>
    </target>
    
    <!-- PHP Mess Detector (PHPMD) permet d'évaluer la qualité de code source PHP. 
        Il détecte les variables et les méthodes non-utilisées, 
        les noms de variable trop court ou trop long, les méthodes trop complexes, etc -->
    <target name="phpmd">
    	<phpmd file="${project.basedir}/src" >
            <formatter type="xml" outfile="${project.basedir}/build/phpmd.xml" />
    	</phpmd>
    </target>

    <!-- pour la détection de certains bugs, de paramètres, méthodes ou propriétés non utilisées, etc -->
    <target name="phpcpd">
    	<phpcpd file="${project.basedir}/src">
            <formatter type="pmd" outfile="${project.basedir}/build/logs/pmd-cpd.xml"/>
    	</phpcpd>
    </target>

    <!-- pour mesurer rapidement la taille et la structure d’un projet PHP. -->
    <target name="phploc">
        <exec logoutput="true" dir="${project.basedir}" command="phploc --log-csv '${project.basedir}/build/logs/phploc.csv' '${project.basedir}/src'" escape="false" />
    </target>

    <!-- PHP CodeSniffer est un utilitaire pour détecter les erreurs de style de code dans le code PHP -->
    <target name="phpcs">
        <exec command="${project.basedir}/vendor/bin/phpcs 
        --report=checkstyle 
        --report-file=${project.basedir}/build/logs/checkstyle.xml 
        --standard=PSR2
        --extensions=php 
        --file-list=${project.basedir}/build/codesnifer
    " />
    </target>

    <!-- phpDox est un générateur de documentation pour les projets PHP.
        Cela inclut, mais sans s'y limiter, la documentation de l'API. -->
    <target name="phpdox">
        <exec command="php ${project.basedir}/phpdox.phar" />
    </target>
    <!-- PHPUnit est un framework open source de tests unitaires dédié au langage de programmation PHP. Il permet 
         l'implémentation des tests de régression en vérifiant que les exécutions correspondent aux assertions 
         prédéfinies. -->

    <target name="phpunit">
        <exec logoutput="true" dir="${project.basedir}" command="vendor/bin/phpunit" escape="false" />
    </target>
    <!-- Génère une représentation navigable du code PHP où les sections avec des violations trouvées par les outils 
         d'assurance qualité tels que PHP_CodeSniffer ou PHPMD sont mises en surbrillance -->
    <target name="phpcb">
        <exec executable="vendor/mayflower/php-codebrowser/bin/phpcb">
            <arg line="--log '${project.basedir}/build/logs'
                   --output '${project.basedir}/build/code-browser'
                   --source '${project.basedir}/src'" />
        </exec>
    </target>
</project>


